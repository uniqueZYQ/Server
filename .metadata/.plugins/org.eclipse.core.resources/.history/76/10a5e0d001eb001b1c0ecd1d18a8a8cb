package myServlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class RegisterServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public RegisterServlet() {
        super();
    }
 
	/**
	 * 
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String nickname = request.getParameter("nickname"); // 从 request 中获取名为 account 的参数的值
		String pwd = request.getParameter("pwd"); // 从 request 中获取名为 password 的参数的值
		String realname = request.getParameter("realname");
		String stdid = request.getParameter("stdid");
		String resCode = "";
		String resMsg = "";
		String userId = "NULL";
		
		try {
			Connection connect = DBUtil.getConnect();
			Statement statement = (Statement) connect.createStatement(); // Statement可以理解为数据库操作实例，对数据库的所有操作都通过它来实现
			ResultSet result;
			
			String sqlQuery = "select * from " + DBUtil.TABLE_USER + " where stdid='" + stdid + "'";
			
			// 查询类操作返回一个ResultSet集合，没有查到结果时ResultSet的长度为0
			result = statement.executeQuery(sqlQuery); // 先查询同样的账号（比如手机号）是否存在
			if(result.next()){ // 已存在
				resCode = "201";
				resMsg = "该学号已被注册";
				userId = String.valueOf(result.getInt("id"));
			} else { // 不存在
				String sqlInsertPass = "insert into " + DBUtil.TABLE_USER + "(stdid,nickname,pwd,realname) values('"+stdid+"','"+nickname+"','"+pwd+"','"+realname+"')";
				// 更新类操作返回一个int类型的值，代表该操作影响到的行数
				int row1 = statement.executeUpdate(sqlInsertPass); // 插入帐号密码
				if(row1 == 1){
					String sqlQueryId = "select stdid,id from " + DBUtil.TABLE_USER + " where stdid='" + stdid + "'";
					ResultSet result2 = statement.executeQuery(sqlQueryId); // 查询新增记录的userId
					if(result2.next()){
						userId = String.valueOf((result2.getInt("id")));
						resCode = "100";
						resMsg = "注册成功";
					}
					else {
						resCode = "202";
						resMsg = "用户信息表插入错误";
						userId = "NULL";
					}	
				} else {
					resCode = "203";
					resMsg = "用户信息表插入错误";
					userId = "NULL";
				}
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		HashMap<String, String> map = new HashMap<>();
		map.put("resCode", resCode);
		map.put("resMsg", resMsg);
		map.put("userId", userId);
		
		response.setContentType("text/html;charset=utf-8"); // 设置响应报文的编码格式
		PrintWriter pw = response.getWriter(); // 获取 response 的输出流
		pw.println(map.toString()); // 通过输出流把业务逻辑的结果输出
		pw.flush();
	}
 
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
		String account;
		String password;
		
		// 获取POST请求参数
		// 肯定有人会发现，这不是和GET方法中获取参数的方法一样嘛！说实话，看起来是一样的，**这个问题先留下，我们后边还会提到**
		account = request.getParameter("stdid");
		password = request.getParameter("pwd"); 
		
		// 响应
		response.getWriter().append("你提交的账号为: ").append(account).append("\n密码：").append(password);

	}
 
}
